/*
 * generated by Xtext 2.13.0
 */
package com.tmtron.ex.xtext.twog.tests

import com.google.inject.Inject
import com.tmtron.ex.xtext.twog.a.ModelA
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith

@RunWith(XtextRunner)
@InjectWith(AInjectorProvider)
class AParsingTest {
	@Inject
	ParseHelper<ModelA> parseHelper

	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			def DefInt Integer
			''')
		Assert.assertNotNull(result)
		val errors = result.eResource.errors
		Assert.assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
	}


	@Test
	def void loadModelWith2Defs() {
		val result = parseHelper.parse('''
		def Def1 java.lang.String
		def Def2 Integer
		''')
		Assert.assertNotNull(result)
		val errors = result.eResource.errors
		Assert.assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
	}
	
	@Test
	def void loadModelWithPackage() {
		val result = parseHelper.parse('''
			package com.tmtron {
			  def Def1 java.lang.String
			  def Def2 Integer
			}''')
		Assert.assertNotNull(result)
		val errors = result.eResource.errors
		Assert.assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
	}
}
